#!/usr/bin/env bash
#
# kioskctl – enable / disable Chromium kiosk mode for the Raspberry Pi user
# Default user is "pi" but can be overridden via the KIOSK_USER environment variable.
# Works on Raspberry\u00A0Pi\u00A0OS Bookworm (Wayland) and Bullseye (X11).
#
# Usage:
#   sudo kioskctl enable   "https://example.com"
#   sudo kioskctl disable
#
# The target URL is stored in /etc/kiosk.conf as   URL="https://\u2026"
# Edit that file (or rerun kioskctl enable <url>) whenever you need a new page.

set -euo pipefail

# ---------- configuration paths ----------
CONF_FILE="/etc/kiosk.conf"                       # keeps only   URL=\"\u2026\"
PI_USER="$jan"
RUN_SCRIPT="/home/${PI_USER}/.local/bin/run-kiosk.sh"
SERVICE_FILE="/home/${PI_USER}/.config/systemd/user/kiosk.service"
LXDE_AUTOSTART="/home/${PI_USER}/.config/lxsession/LXDE-pi/autostart"

# ---------- helper functions ----------
die()      { echo "Error: $*" >&2; exit 1; }
need_root(){ [[ $EUID -eq 0 ]] || die "run with sudo"; }
as_pi()    { sudo -u "$PI_USER" "$@"; }

# ---------- core ----------
need_root
action=${1:-}
url=${2:-}

case "$action" in
# ---------------- ENABLE ----------------
enable)
  [[ -n "$url" ]] || die "missing URL argument"
  echo "URL=\"$url\"" > "$CONF_FILE"

  # create per\u2011user run script
  as_pi mkdir -p "$(dirname "$RUN_SCRIPT")"
  as_pi tee  "$RUN_SCRIPT" >/dev/null <<EOF2
#!/usr/bin/env bash
# Auto\u2011generated by kioskctl \u2013 do not edit.
source "$CONF_FILE"
sleep 2
chromium-browser \\
  --kiosk "\$URL" --noerrdialogs --incognito \\
  --disable-translate --disable-features=TranslateUI
EOF2
  as_pi chmod +x "$RUN_SCRIPT"

  # systemd user unit (Bookworm and Bullseye alike)
  as_pi mkdir -p "$(dirname "$SERVICE_FILE")"
  as_pi tee  "$SERVICE_FILE" >/dev/null <<EOF2
[Unit]
Description=Chromium Kiosk
After=graphical-session.target

[Service]
ExecStart=$RUN_SCRIPT
Restart=always
RestartSec=2

[Install]
WantedBy=graphical-session.target
EOF2

  # ensure \u201cpi\u201d services can start at boot even before a login
  loginctl enable-linger "$PI_USER" 2>/dev/null || true

  # activate the unit
  as_pi systemctl --user daemon-reload
  as_pi systemctl --user enable --now kiosk.service

  # legacy LXDE autostart (covers older Bullseye images)
  if grep -q LXDE-pi /usr/share/xsessions/* 2>/dev/null; then
    as_pi mkdir -p "$(dirname "$LXDE_AUTOSTART")"
    grep -qxF "@$RUN_SCRIPT" "$LXDE_AUTOSTART" 2>/dev/null || \
      echo "@$RUN_SCRIPT" | as_pi tee -a "$LXDE_AUTOSTART" >/dev/null
  fi

  echo "✅  Kiosk mode enabled \u2192 $url"
  ;;

# ---------------- DISABLE ----------------
disable)
  as_pi systemctl --user disable --now kiosk.service 2>/dev/null || true
  rm -f "$SERVICE_FILE" "$LXDE_AUTOSTART"
  echo "❎  Kiosk mode disabled (service removed)"
  ;;

# ---------------- HELP ----------------
*)
  cat <<EOF2
Usage:
  sudo kioskctl enable  <url>   # create/update kiosk and start it
  sudo kioskctl disable         # stop kiosk and remove service
EOF2
  exit 1
  ;;
esac
